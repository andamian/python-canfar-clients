#!/usr/bin/python
#!python
"""Get or put a file to the CADC storage system."""

from cadc.__version__ import version
from cadc.data.client import DataClient
from cadc.common.parser import BaseParser
import sys
import logging
description = "Get or Put a file to the CADC storage system."

if __name__=='__main__':

    # Parse the command line
    parser = BaseParser(description=description, version=version)
    parser.add_argument('dir', choices=['get','put'], help='Direction')
    parser.add_argument('archive', help='Archive name')
    parser.add_argument('file', help='File on local disk')
    parser.add_argument('--stream', default=None, help='Stream name')
    parser.add_argument('--filename', default=None,
                        help='Filename in archive')

    args=parser.parse_args()

    certfile=args.certfile
    host=args.host
    anonymous=args.anonymous
    dir=args.dir
    if dir == 'put':
        is_put = True
    else:
        is_put = False
    archive = args.archive
    file = args.file
    stream = args.stream
    filename = args.filename

    if file is None:
        if dir == 'put':
            raise ValueError("--file must be specified for a put")
        else:
            # Default file name from URI (text after final '/')
            file = (uri.split('/'))[-1]

    # Create a data client and logger
    #hostname = 'test.canfar.phys.uvic.ca'
    #hostname = 'majorb.cadc.dao.nrc.ca'
    try:
        # Schema validation is slow due to large initial overhead (~1.5s) ?
        c = DataClient(certfile=certfile, schema_validate=False,
                       host=host, anonymous=anonymous)
        logger = c.get_logger(verbose=args.verbose, debug=args.debug,
                              quiet=args.quiet)
        logger.debug("Start")
    except Exception as e:
        print e
        #logger.debug("End")
        sys.exit(1)

    logger.debug("Client authorized: %s, certfile: %s, name/password: %s" % \
                     (str(c.is_authorized), str(c.certificate_file_location),
                      str(c.basic_auth is not None)) )

    # hack for VOSpace testing
    #if c.basic_auth:
    #    auth_url='auth/'
    #else:
    #    auth_url=''
    #c.base_url = '%s://%s/vospace/%ssynctrans' % (c.protocol,c.host,auth_url)
    #uri = 'vos:/echapin/%s' % filename

    # Copy file
    try:
        c.transfer_file(file, archive=archive, filename=filename,
                        is_put=is_put, stream=stream)
    except Exception as e:
        logger.exception("Failed to copy file:\n%s" % str(e) )
        logger.debug("End")
        sys.exit(1)

    logger.debug("End")
    sys.exit(0)
